version: '3.5'

services:
  kf-1:
    environment:
      - KAFKA_ADVERTISED_LISTENERS=PLAINTEXT://kf-1:${KF_PORT}
      - KAFKA_HEAP_OPTS=-Xmx4g -Xms4g
    deploy:
      mode: replicated
      replicas: 1
      placement:
        constraints:
          - node.role == worker
          - engine.labels.availability_zone == ${AWS_REGION}a
      restart_policy:
        condition: on-failure
        delay: 1m
        window: 3m

  kf-2:
    environment:
      - KAFKA_ADVERTISED_LISTENERS=PLAINTEXT://kf-2:${KF_PORT}
      - KAFKA_HEAP_OPTS=-Xmx4g -Xms4g
    deploy:
      mode: replicated
      replicas: 1
      placement:
        constraints:
          - node.role == worker
          - engine.labels.availability_zone == ${AWS_REGION}b
      restart_policy:
        condition: on-failure
        delay: 1m
        window: 3m

  kf-3:
    environment:
      - KAFKA_ADVERTISED_LISTENERS=PLAINTEXT://kf-3:${KF_PORT}
      - KAFKA_HEAP_OPTS=-Xmx4g -Xms4g
    deploy:
      mode: replicated
      replicas: 1
      placement:
        constraints:
          - node.role == worker
          - engine.labels.availability_zone == ${AWS_REGION}c
      restart_policy:
        condition: on-failure
        delay: 1m
        window: 3m

volumes:
  kf-1-data-vol:
    name: kf-1-data-vol
    driver: "cloudstor:aws"
    driver_opts:
      backing: relocatable
      size: 500
      ebstype: st1

  kf-2-data-vol:
    name: kf-2-data-vol
    driver: "cloudstor:aws"
    driver_opts:
      backing: relocatable
      size: 500
      ebstype: st1

  kf-3-data-vol:
    name: kf-3-data-vol
    driver: "cloudstor:aws"
    driver_opts:
      backing: relocatable
      size: 500
      ebstype: st1
