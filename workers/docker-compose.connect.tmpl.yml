version: '3.5'

services:
  connect:
    image: ${IMAGE_NAME:-confluentinc/cp-kafka-connect}:${IMAGE_TAG:-latest}
    hostname: connect
    environment:
      AWS_ACCESS_KEY_ID: ${AWS_ACCESS_KEY_ID}
      AWS_SECRET_ACCESS_KEY: ${AWS_SECRET_ACCESS_KEY}
      CONNECT_HOST: connect
      CONNECT_ZOOKEEPER_CONNECT: zk-1:${ZK_PORT},zk-2:${ZK_PORT},zk-3:${ZK_PORT}
      CONNECT_BOOTSTRAP_SERVERS: kf-1:${KF_PORT},kf-2:${KF_PORT},kf-3:${KF_PORT}
      CONNECT_REST_PORT: ${CN_PORT}
      CONNECT_REST_ADVERTISED_HOST_NAME: connect
      CONNECT_GROUP_ID: 'connect-group'
      CONNECT_CONFIG_STORAGE_TOPIC: 'connect-config'
      CONNECT_OFFSET_STORAGE_TOPIC: 'connect-offset'
      CONNECT_STATUS_STORAGE_TOPIC: 'connect-status'
      CONNECT_CONFIG_STORAGE_REPLICATION_FACTOR: 2
      CONNECT_OFFSET_STORAGE_REPLICATION_FACTOR: 2
      CONNECT_STATUS_STORAGE_REPLICATION_FACTOR: 2
      CONNECT_KEY_CONVERTER_SCHEMA_REGISTRY_URL: 'http://schema-registry:${SR_PORT}'
      CONNECT_VALUE_CONVERTER_SCHEMA_REGISTRY_URL: 'http://schema-registry:${SR_PORT}'
      CONNECT_KEY_CONVERTER: 'org.apache.kafka.connect.storage.StringConverter'
      CONNECT_VALUE_CONVERTER: 'io.confluent.connect.avro.AvroConverter'
      CONNECT_INTERNAL_KEY_CONVERTER: 'org.apache.kafka.connect.json.JsonConverter'
      CONNECT_INTERNAL_VALUE_CONVERTER: 'org.apache.kafka.connect.json.JsonConverter'
      CONNECT_PLUGIN_PATH: /usr/share/java,/etc/kafka-connect/jars
      CONNECT_LOG4J_ROOT_LOGLEVEL: ${LOG_LEVEL}
      KAFKA_HEAP_OPTS: '-Xmx512m -Xms256m'
    networks:
      kafka-net:
      postgres-vessel-net:
      elastic-net:
    volumes:
      - kafka-secrets-vol:/etc/kafka/secrets
      - connect-secrets-vol:/etc/kafka-connect/secrets
      - jars-vol:/etc/kafka-connect/jars
      - data-vol:/var/lib/kafka/data
    healthcheck:
      test: curl --silent http://localhost:${CN_PORT}/connectors
      interval: 30s
      timeout: 30s
      retries: 10
      start_period: 5m
    deploy:
      mode: replicated
      replicas: 1
      restart_policy:
        delay: 30s
        window: 2m
      resources:
        limits:
          cpus: '1'
          memory: 1G
        reservations:
          memory: 820M

networks:
  kafka-net:
    name: ${KAFKA_NET_NAME:-kafka-net}
    external: true

  postgres-vessel-net:
    name: ${POSTGRES_VESSEL_NET_NAME:-postgres-vessel-net}
    external: true

  elastic-net:
    name: ${ELASTIC_NET_NAME:-elastic6-net}
    external: true

volumes:
  kafka-secrets-vol:
    name: ${CONNECT_KAFKA_SECRETS_VOL_NAME:-connect-kafka-secrets-vol}

  connect-secrets-vol:
    name: ${CONNECT_SECRETS_VOL_NAME:-connect-connect-secrets-vol}

  data-vol:
    name: ${CONNECT_DATA_VOL_NAME:-connect-data-vol}
